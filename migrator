#!/usr/bin/env ruby

#                   
# This source file is part of the Apodini open source project
# 
# SPDX-FileCopyrightText: 2021 Paul Schmiedmayer and the project authors (see CONTRIBUTORS.md) <paul.schmiedmayer@tum.de>
# 
# SPDX-License-Identifier: MIT
# 

require 'open3'

if ARGV.count != 1
    puts "Usage: #{$0} <migrator-command>"
    exit 0
end

$action = ARGV[0]

class ACTION
    MIGRATE = "migrate"
    GENERATE = "generate"
    COMPARE = "compare"
end

def command(action:)
    migrator = "swift run migrator"
    target = "./Resources"
    packageName = "QONECTIQ"
    oldAPI = "ExampleDocuments/api_qonectiq1.0.0.json"
    newAPI = "ExampleDocuments/api_qonectiq2.0.0.json"

    case action
    when ACTION::MIGRATE
        return "#{migrator} migrate -t=#{target} -d=#{target}/#{oldAPI} -m=#{target}/ExampleDocuments/migration_guide.json -p=#{packageName}"
    when ACTION::GENERATE
        return "#{migrator} generate -d=#{target}/#{oldAPI} -p=#{packageName} -t=#{target}"
    when ACTION::COMPARE
        return "#{migrator} compare -o #{target}/#{oldAPI} -n #{target}/#{newAPI} -m #{target}/ExampleDocuments -f json"
    else
        puts "Usage: #{$0} | Use one of the following commands: <generate> or <compare>. After generating the migration guide with the <compare> command, the library can be migrated via <migrate>"
        exit 0
    end
end



def migrator()
    cmd = command(action: $action)
    Open3.popen3(cmd) do |stdin, stdout, stderr, wait_thr|
        puts stdout.read
        puts stderr.read
    end
end

migrator()
